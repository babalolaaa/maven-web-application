pipeline{
  agent any  
  tools {
    maven "maven3.9.2"
  }
  options {
    buildDiscarder(logRotator(numToKeepStr: '2')) // Keeps the 2 most recent builds
  }  
  //triggers {}
  stages{
    stage('1. clone'){
      steps{
        sh "echo ready to automate build"
        git branch: 'master', url: 'https://github.com/babalolaaa/maven-web-application/'
        sh "echo latest application version collected from SCM"
      }   
    }
    stage('2. build'){
      steps{
        sh "echo build process starts "
        sh "mvn clean package"
        sh "echo build process ends"
      }
    }
 
    stage('3. review'){
      steps{
        sh "echo CodeQuality review  starts "
        sh "mvn sonar:sonar"
        sh "echo CodeQuality review ends"
      }
    }      
    stage('4. UploadArtifacts'){
      steps{
        sh "mvn deploy"
        sh "echo build and release job completed successfully"
      }     
    }
    stage('5. deployment'){
      steps{
        deploy adapters: [tomcat9(credentialsId: 'tomcatcredential', path: '', url: 'http://172.31.9.204:8177/')], contextPath: null, war: 'target/*war'
        sh "echo deployment to production completed successfully"
      }       
    }
  }
  post{
    failure{
         emailext body: '''Hi Team,
Build failed
komptech''', recipientProviders: [developers(), contributor()], subject: 'build status', to: 'developers'

    }
    success{
         emailext body: '''Hi Team,
Build succeeded
Komptech''', recipientProviders: [developers(), contributor()], subject: 'build status', to: 'developers'

    }
    always{
         emailext body: '''Hi Team,
Build status
komptech''', recipientProviders: [developers(), contributor()], subject: 'build status', to: 'developers'

    }
  }
  
}
